── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.0     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.1     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ dplyr::select() masks MASS::select()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loaded glmnet 4.1-6

Attaching package: ‘data.table’

The following objects are masked from ‘package:lubridate’:

    hour, isoweek, mday, minute, month, quarter, second, wday, week,
    yday, year

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Warning messages:
1: replacing previous import ‘data.table::last’ by ‘dplyr::last’ when loading ‘rashomontva’ 
2: replacing previous import ‘data.table::first’ by ‘dplyr::first’ when loading ‘rashomontva’ 
3: replacing previous import ‘data.table::between’ by ‘dplyr::between’ when loading ‘rashomontva’ 
Error in `pull()`:
! Can't extract columns that don't exist.
✖ Column `YStar` doesn't exist.
Backtrace:
     ▆
  1. ├─global SimulationFunc(...)
  2. │ └─global ModelTypeSwitchFunc(...)
  3. │   └─global RashomonProfileFunc(TrainingSet, CovariateList, LabelName, RashomonParameters)
  4. │     └─rashomontva::aggregate_rashomon_profiles(...)
  5. │       ├─dplyr::pull(data_i, value)
  6. │       └─dplyr:::pull.data.frame(data_i, value)
  7. │         └─tidyselect::vars_pull(names(.data), !!enquo(var))
  8. │           └─tidyselect:::pull_as_location2(...)
  9. │             ├─tidyselect:::with_subscript_errors(...)
 10. │             │ └─rlang::try_fetch(...)
 11. │             │   └─base::withCallingHandlers(...)
 12. │             └─vctrs::vec_as_location2(...)
 13. │               ├─vctrs:::result_get(...)
 14. │               └─vctrs:::vec_as_location2_result(...)
 15. │                 ├─base::tryCatch(...)
 16. │                 │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 17. │                 │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 18. │                 │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 19. │                 └─vctrs::vec_as_location(i, n, names = names, arg = arg, call = call)
 20. └─vctrs (local) `<fn>`()
 21.   └─vctrs:::stop_subscript_oob(...)
 22.     └─vctrs:::stop_subscript(...)
 23.       └─rlang::abort(...)
Execution halted
